
int FS_WriteLog( const void *buffer, int ilen, fileHandle_t h )
{
	fileHandleData_t *fhd;
	int remaining;
	int writelen;
	int i, len;
	len = ilen;

	fhd = &fsh[h];
	if(fhd->writebuffer == NULL)
	{
		Com_Error(ERR_FATAL, "attempted to use FS_WriteLog on a non logfile handle");
	}

	while(1){ //Spin here as long as we don't have enough space to put the message into the buffer

		Sys_EnterCriticalSection(CRITSECT_LOGFILETHREAD);

		if(fhd->bufferPos >= fhd->rbufferPos)
		{
		    remaining = DEFAULT_LOGFILEBUFFER - (fhd->bufferPos - fhd->rbufferPos) -1;
		}else{
		    remaining = (fhd->rbufferPos - fhd->bufferPos) -1;
		}

		writelen = len;
		if(remaining < writelen)
		{
			writelen = remaining;
		}
		int index;
		for(i = 0; i < writelen; ++i)
		{
			index = (fhd->bufferPos + i) % DEFAULT_LOGFILEBUFFER;
			((char*)fhd->writebuffer)[index] = ((char*)buffer)[i];
		}
		fhd->bufferPos = (fhd->bufferPos + i) % DEFAULT_LOGFILEBUFFER;

		Sys_LeaveCriticalSection(CRITSECT_LOGFILETHREAD);

		buffer += writelen;
		len -= writelen;

		if(len == 0)
		{
			break;
		}else{
			Sys_SleepUSec(0);
		}
	}
	return ilen;
}
