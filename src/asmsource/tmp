
	global Vec3NormalizeTo

;Vec3NormalizeTo(float const*, float*)
Vec3NormalizeTo:
	push ebp
	mov ebp, esp
	push ebx
	sub esp, 0x14
	mov eax, [ebp+0x8]
	mov edx, [ebp+0xc]
	movss xmm3, dword [eax]
	lea ebx, [eax+0x4]
	movss xmm1, dword [eax+0x4]
	lea ecx, [eax+0x8]
	movss xmm2, dword [eax+0x8]
	movaps xmm0, xmm3
	mulss xmm0, xmm3
	mulss xmm1, xmm1
	addss xmm0, xmm1
	mulss xmm2, xmm2
	addss xmm0, xmm2
	sqrtss xmm1, xmm0
	movaps xmm0, xmm1
	xorps xmm0, [_data16_80000000]
	ucomiss xmm0, [_float_0_00000000]
	jb Vec3NormalizeTo_10
	movss xmm2, dword [_float_1_00000000]
Vec3NormalizeTo_20:
	mulss xmm3, xmm2
	movss [edx], xmm3
	movaps xmm0, xmm2
	mulss xmm0, [ebx]
	movss [edx+0x4], xmm0
	mulss xmm2, [ecx]
	movss [edx+0x8], xmm2
	movss [ebp-0xc], xmm1
	fld dword [ebp-0xc]
	add esp, 0x14
	pop ebx
	pop ebp
	ret
Vec3NormalizeTo_10:
	movss xmm2, dword [_float_1_00000000]
	divss xmm2, xmm1
	jmp Vec3NormalizeTo_20



;All constant floats and doubles:
SECTION .rdata
_float_1_00000000:		dd 0x3f800000	; 1
_data16_80000000:		dd 0x80000000, 0x0, 0x0, 0x0	; OWORD
_float_0_00000000:		dd 0x0	; 0
